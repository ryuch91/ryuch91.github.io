{"version":3,"sources":["webpack://gatsby-starter-hello-world/./src/logo.mdx","webpack://gatsby-starter-hello-world/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://gatsby-starter-hello-world/./src/components/Logo/logo.module.css","webpack://gatsby-starter-hello-world/./src/components/Logo/index.js","webpack://gatsby-starter-hello-world/./src/components/Navbar/navbar.module.css","webpack://gatsby-starter-hello-world/./src/components/Navbar/index.js","webpack://gatsby-starter-hello-world/./src/components/layout.js","webpack://gatsby-starter-hello-world/./src/components/layout.module.css","webpack://gatsby-starter-hello-world/./src/pages/blog.js"],"names":["layoutProps","_frontmatter","MDXContent","components","props","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","mdxType","isMDXComponent","className","to","navBarSection","navLinkItem","navLinkText","pageTitle","children","Navbar","posts","data","blog","map","post","id","fields","slug","frontmatter","title","author","date","excerpt"],"mappings":"kOAQMA,EAAc,CAClBC,aAF0B,IAKb,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,ECdU,SAAuCC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDGN,MACD,OAAO,QALS,UAKT,iBAAeT,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYY,QAAQ,eAC5E,4BAKJb,EAAWc,gBAAiB,EErBrB,ICiBP,EAVa,WACX,OACE,uBAAKC,UDTgB,oCCUnB,gBAAC,KAAD,CAAMC,GAAG,IAAID,UDTG,iCCUd,gBAAC,EAAD,SCVGE,EAAgB,wCAEhBC,EAAc,sCACdC,EAAc,sCC4BzB,EApBe,WACb,OACE,uBAAKJ,UDdkB,yCCerB,uBAAKA,UAAWE,GACd,gBAAC,EAAD,OAEF,uBAAKF,UAAWE,GACd,sBAAIF,UDjBU,mCCkBZ,sBAAIA,UAAWG,GACb,gBAAC,KAAD,CAAMF,GAAG,SAASD,UAAWI,GAA7B,YAEF,sBAAIJ,UAAWG,GACb,gBAAC,KAAD,CAAMF,GAAG,QAAQD,UAAWI,GAA5B,eCNZ,EAXe,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAC3B,OACE,wBAAMN,UCTa,mCDUjB,iCAAUK,EAAV,KACA,gBAACE,EAAD,MACA,sBAAIP,UCXW,iCDWf,IAA2BK,EAA3B,KACCC,K,0EEkCP,UA5CiB,SAAC,GAAc,IACtBE,EADqB,EAAXC,KACKC,KAAfF,MAER,OACE,gBAAC,IAAD,CAAQH,UAAU,iBAEfG,EAAMG,KAAI,SAAAC,GAAI,OACb,2BAAStB,IAAKsB,EAAKC,IACjB,gBAAC,KAAD,CAAMZ,GAAIW,EAAKE,OAAOC,MACpB,0BAAMH,EAAKI,YAAYC,QAEzB,6BACGL,EAAKI,YAAYE,OADpB,KAC8BN,EAAKI,YAAYG,MAE/C,yBAAIP,EAAKQ","file":"component---src-pages-blog-js-153a5998090314494546.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`GanDev`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport var logoWrapper = \"logo-module--logo-wrapper--2_zj7\";\nexport var logoLink = \"logo-module--logo-link--H8Zdl\";","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport LogoWord from \"../../logo.mdx\"\nimport { \n  logoWrapper,\n  logoLink,\n } from \"./logo.module.css\"\n\nconst Logo = () => {\n  return(\n    <div className={logoWrapper}>\n      <Link to=\"/\" className={logoLink}>\n        <LogoWord/>\n      </Link>\n    </div>\n  )\n}\n\nexport default Logo;","// extracted by mini-css-extract-plugin\nexport var navBarWrapper = \"navbar-module--nav-bar-wrapper--39uMQ\";\nexport var navBarSection = \"navbar-module--nav-bar-section--3R1R-\";\nexport var navLinks = \"navbar-module--nav-links--M5lZC\";\nexport var navLinkItem = \"navbar-module--nav-link-item--1HBV8\";\nexport var navLinkText = \"navbar-module--nav-link-text--Z-e2H\";","//import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Logo from \"../Logo\"\nimport { \n  navBarSection,\n  navBarWrapper,\n  navLinks,\n  navLinkItem,\n  navLinkText,\n} from \"./navbar.module.css\"\n\nconst NavBar = () => {\n  return(\n    <nav className={navBarWrapper}>\n      <div className={navBarSection}>\n        <Logo/>\n      </div>\n      <div className={navBarSection}>\n        <ul className={navLinks}>\n          <li className={navLinkItem}>\n            <Link to=\"/about\" className={navLinkText}> About </Link>\n          </li>\n          <li className={navLinkItem}>\n            <Link to=\"/blog\" className={navLinkText}> Blog </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar;","import React from \"react\"\n\nimport Navbar from \"./Navbar\"\nimport { \n  container,\n  heading,\n } from \"./layout.module.css\"\n\nconst Layout = ({ pageTitle, children }) => {\n  return(\n    <main className={container}>\n      <title> { pageTitle } </title>\n      <Navbar />\n      <h1 className={heading}> { pageTitle } </h1>\n      {children}\n    </main>\n  )\n}\n\nexport default Layout","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--YM7Lx\";\nexport var heading = \"layout-module--heading--2By-2\";","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nconst BlogPage = ({ data }) => {\n  const { posts } = data.blog\n\n  return(\n    <Layout pageTitle=\"My Blog Posts\">\n\n      {posts.map(post=>(\n        <article key={post.id}>\n          <Link to={post.fields.slug}>\n            <h2>{ post.frontmatter.title }</h2>\n          </Link>\n          <small>\n            {post.frontmatter.author}, {post.frontmatter.date}\n          </small>\n          <p>{post.excerpt}</p>\n        </article>\n      ))}\n    </Layout>\n  )\n}\n\n// allMarkdownRemark를 통해 모든 md파일 query\n// date(fromNow: true)를 통해 relative time을 출력\n// allMarkdownRemark가 지정된 directory의 파일들을 scan해서\n// 각 파일들을 Gatsby의 \"node\"로 만든다.\nexport const pageQuery = graphql`\n  query MyQuery{\n    blog: allMarkdownRemark{\n      posts: nodes{\n        fields{\n          slug\n        }\n        frontmatter{\n          date(fromNow: true)\n          title\n          author\n        }\n        excerpt\n        id\n      }\n    }\n  }\n`\n\nexport default BlogPage"],"sourceRoot":""}